@model ECommerceShop.Models.ProductDetails
@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

    <div class="container-fluid">
        <hr />
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table mr-1"></i>Add New Product
            </div>
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.CreatedDate, new { @Value = DateTime.Now })
                        @Html.HiddenFor(model => model.ModifiedDate, new { @Value = DateTime.Now })
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        @{
                            List<SelectListItem> data = ViewBag.CategoryList;
                        }
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.CategoryId, data, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.CheckBox("IsFeatured")
                                    @*@Html.EditorFor(model => model.IsFeatured, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.CheckBox("IsActive")
                                    @*@Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.CheckBox("IsDeleted")
                                    @*@Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <a onclick="window.history.back();" class="btn btn-danger" style="color:white">Cancel</a>
                                    <input type="submit" value="Save" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>